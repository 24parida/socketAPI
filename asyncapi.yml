asyncapi: 3.0.0
id: urn:socket-ai-api:v1
info:
  title: Socket AI_API Protocol
  version: 1.0.0
  description: >
    Formal specification for the Socket AI_API raw TCP + JSON protocol.

    Injector (game platform) and AI_API exchange JSON messages over a persistent
    TCP connection.

    Message routing is by the `message_type` discriminator field in each
    payload.
defaultContentType: application/json
servers:
  production:
    host: ai-api.example.com:9000
    protocol: tcp
    description: Production TCP endpoint for AI_API
    bindings:
      x-tcp:
        framing: length-prefixed
        keepalive: true
channels:
  ai_api:
    address: ai_api
    messages:
      publish.message.0:
        $ref: '#/components/messages/AIResponse'
      subscribe.message.0:
        $ref: '#/components/messages/StartGame'
      subscribe.message.1:
        $ref: '#/components/messages/PrivateHand'
      subscribe.message.2:
        $ref: '#/components/messages/DealCommunityCards'
      subscribe.message.3:
        $ref: '#/components/messages/PlayerMove'
      subscribe.message.4:
        $ref: '#/components/messages/Showdown'
      subscribe.message.5:
        $ref: '#/components/messages/ResumeFromDisconnect'
    description: Bidirectional stream over a single TCP connection
    bindings:
      x-tcp:
        halfDuplex: false
operations:
  ai_api.publish:
    action: receive
    channel:
      $ref: '#/channels/ai_api'
    summary: AI_API → Injector messages
    messages:
      - $ref: '#/channels/ai_api/messages/publish.message.0'
  ai_api.subscribe:
    action: send
    channel:
      $ref: '#/channels/ai_api'
    summary: Injector → AI_API messages
    messages:
      - $ref: '#/channels/ai_api/messages/subscribe.message.0'
      - $ref: '#/channels/ai_api/messages/subscribe.message.1'
      - $ref: '#/channels/ai_api/messages/subscribe.message.2'
      - $ref: '#/channels/ai_api/messages/subscribe.message.3'
      - $ref: '#/channels/ai_api/messages/subscribe.message.4'
      - $ref: '#/channels/ai_api/messages/subscribe.message.5'
components:
  messages:
    StartGame:
      name: start_game
      title: Game start
      contentType: application/json
      payload:
        $ref: '#/components/schemas/StartGamePayload'
      examples:
        - payload:
            message_type: start_game
            platform_name: xx_poker
            n_players: 6
            sb: 100
            bb: 200
            ante: 0
            straddle: 0
            cashdrop: 1000
            player_info:
              - pid: '332567'
                stack: 47980
              - pid: '101929'
                stack: 55290
              - pid: '111190'
                stack: 25000
              - pid: '94784'
                stack: 78473
              - pid: '106969'
                stack: 25000
              - pid: '111582'
                stack: 82482
            ai_player_pid: '111582'
            post_a_blind_pids:
              - '111582'
              - '106969'
            game_type: cash
            raise_to: true
    PrivateHand:
      name: private_hand
      title: Deal private (hole) cards
      contentType: application/json
      payload:
        $ref: '#/components/schemas/PrivateHandPayload'
      examples:
        - payload:
            message_type: private_hand
            private_hand:
              - As
              - Ks
    DealCommunityCards:
      name: deal_community_cards
      title: Deal community cards
      contentType: application/json
      payload:
        $ref: '#/components/schemas/DealCommunityCardsPayload'
      examples:
        - payload:
            message_type: deal_community_cards
            deal_community_cards:
              - 3s
              - 5s
              - 8d
            pot_adjustment: 380
    PlayerMove:
      name: player_move
      title: Player action
      contentType: application/json
      payload:
        $ref: '#/components/schemas/PlayerMovePayload'
      examples:
        - payload:
            message_type: player_move
            action:
              player_pid: '111190'
              bet_type: raises
              amount: 1000
    Showdown:
      name: showdown
      title: Game end / showdown
      contentType: application/json
      payload:
        $ref: '#/components/schemas/ShowdownPayload'
      examples:
        - payload:
            message_type: showdown
            showdown_info:
              - pid: '332567'
                payoff: 0
                rake: 0
                showdown_cards:
                  - Qc
                  - 3c
              - pid: '101929'
                payoff: -375
                rake: 0
              - pid: '111190'
                payoff: 750
                rake: 25
                showdown_cards:
                  - Tc
                  - 8s
              - pid: '94784'
                payoff: -125
                rake: 0
              - pid: '106969'
                payoff: -125
                rake: 0
              - pid: '111582'
                payoff: -125
                rake: 0
    ResumeFromDisconnect:
      name: resume_from_disconnect
      title: Resume state after disconnect
      contentType: application/json
      payload:
        $ref: '#/components/schemas/ResumeFromDisconnectPayload'
      examples:
        - payload:
            message_type: resume_from_disconnect
            player_info:
              - pid: '332567'
                stack: 47980
                folded: false
              - pid: '101929'
                stack: 55290
                folded: false
            current_acting_player: '332567'
            community_cards:
              - 3s
              - 5s
              - 8d
              - 8c
            pot: 1500
    AIResponse:
      name: ai_response
      title: AI response (action or ack)
      contentType: application/json
      payload:
        $ref: '#/components/schemas/AIResponsePayload'
      examples:
        - name: error_example
          payload:
            success: false
            error_msg: 'action invalid: xxxxx'
        - name: action_example
          payload:
            success: true
            game_id: abc123
            action:
              current_player_id: '111190'
              bet_type: checks
              amount: 0
  schemas:
    BetType:
      type: string
      enum:
        - bets
        - raises
        - calls
        - checks
        - folds
        - allins
    Card:
      type: string
      description: Two-character (or 3 for 10) rank-suit code, e.g., "As", "Td"
      pattern: ^[2-9TJQKA][cdhs]$
    StartGamePayload:
      type: object
      additionalProperties: false
      properties:
        message_type:
          const: start_game
        platform_name:
          type: string
        n_players:
          type: integer
          minimum: 2
          maximum: 10
        sb:
          type: integer
          minimum: 0
        bb:
          type: integer
          minimum: 0
        ante:
          type: integer
          minimum: 0
        straddle:
          type: integer
          minimum: 0
        cashdrop:
          type: integer
          minimum: 0
        player_info:
          type: array
          minItems: 2
          items:
            $ref: '#/components/schemas/PlayerSeat'
        ai_player_pid:
          type: string
        post_a_blind_pids:
          type: array
          items:
            type: string
        game_type:
          type: string
          enum:
            - cash
        raise_to:
          type: boolean
      required:
        - message_type
        - platform_name
        - n_players
        - sb
        - bb
        - player_info
    PlayerSeat:
      type: object
      additionalProperties: false
      properties:
        pid:
          type: string
        stack:
          type: integer
          minimum: 0
      required:
        - pid
        - stack
    PrivateHandPayload:
      type: object
      additionalProperties: false
      properties:
        message_type:
          const: private_hand
        private_hand:
          type: array
          minItems: 2
          maxItems: 2
          items:
            $ref: '#/components/schemas/Card'
      required:
        - message_type
        - private_hand
    DealCommunityCardsPayload:
      type: object
      additionalProperties: false
      properties:
        message_type:
          const: deal_community_cards
        deal_community_cards:
          type: array
          minItems: 1
          maxItems: 3
          items:
            $ref: '#/components/schemas/Card'
          description: >
            Newly dealt community cards: - 3 on transition preflop→flop - 1 on
            turn - 1 on river
        pot_adjustment:
          type: integer
          minimum: 0
          description: Pot amount after adjustment (optional)
      required:
        - message_type
        - deal_community_cards
    PlayerMovePayload:
      type: object
      additionalProperties: false
      properties:
        message_type:
          const: player_move
        action:
          type: object
          additionalProperties: false
          properties:
            player_pid:
              type: string
            bet_type:
              $ref: '#/components/schemas/BetType'
            amount:
              type: integer
              minimum: 0
              description: >
                For bets/raises, this is the wager size (raise size EXCLUDING
                the to-call portion). For non-bet/raise actions, set to 0.
          required:
            - player_pid
            - bet_type
            - amount
      required:
        - message_type
        - action
    ShowdownPayload:
      type: object
      additionalProperties: false
      properties:
        message_type:
          const: showdown
        showdown_info:
          type: array
          items:
            $ref: '#/components/schemas/ShowdownEntry'
      required:
        - message_type
        - showdown_info
    ShowdownEntry:
      type: object
      additionalProperties: false
      properties:
        pid:
          type: string
        payoff:
          type: integer
        rake:
          type: integer
          minimum: 0
        showdown_cards:
          type: array
          minItems: 2
          maxItems: 2
          items:
            $ref: '#/components/schemas/Card'
      required:
        - pid
        - payoff
        - rake
    ResumeFromDisconnectPayload:
      type: object
      additionalProperties: false
      properties:
        message_type:
          const: resume_from_disconnect
        player_info:
          type: array
          items:
            $ref: '#/components/schemas/ResumeSeat'
        current_acting_player:
          type: string
        community_cards:
          type: array
          minItems: 0
          maxItems: 5
          items:
            $ref: '#/components/schemas/Card'
        pot:
          type: integer
          minimum: 0
      required:
        - message_type
        - player_info
        - current_acting_player
        - community_cards
        - pot
    ResumeSeat:
      type: object
      additionalProperties: false
      properties:
        pid:
          type: string
        stack:
          type: integer
          minimum: 0
        folded:
          type: boolean
      required:
        - pid
        - stack
    AIResponsePayload:
      type: object
      additionalProperties: false
      properties:
        success:
          type: boolean
        error_msg:
          type: string
        hero_payoff:
          type: integer
          description: Only present after showdown; equals payoff - rake
        game_id:
          type: string
          description: Present only in response to 'start_game'
        action:
          type: object
          description: Present only when it is the hero's turn to act
          additionalProperties: false
          properties:
            current_player_id:
              type: string
              description: Verification of the acting player
            bet_type:
              $ref: '#/components/schemas/BetType'
            amount:
              type: integer
              minimum: 0
              description: >
                For bets/raises, wager size (raise size EXCLUDING the to-call
                portion). For non-bet/raise actions, set to 0.
          required:
            - current_player_id
            - bet_type
            - amount
      required:
        - success
