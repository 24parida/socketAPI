"asyncapi: 3.0.0\nid: 'urn:socket-ai-api:v1'\ninfo:\n  title: Platin AI Socket AI_API Protocol\n  version: 1.0.0\n  description: >\n    Formal specification for the Socket AI_API raw TCP + JSON protocol.\n\n    Injector (game platform) and AI_API exchange JSON messages over a persistent\n    TCP connection.\n\n    Message routing is by the `message_type` discriminator field in each\n    payload.\ndefaultContentType: application/json\nservers:\n  production:\n    host: 'ai-api.example.com:9000'\n    protocol: tcp\n    description: Production TCP endpoint for AI_API\n    bindings:\n      x-tcp:\n        framing: length-prefixed\n        keepalive: true\nchannels:\n  ai_api:\n    address: ai_api\n    messages:\n      publish.message.0:\n        $ref: '#/components/messages/AIResponse'\n      subscribe.message.0:\n        $ref: '#/components/messages/StartGame'\n      subscribe.message.1:\n        $ref: '#/components/messages/PrivateHand'\n      subscribe.message.2:\n        $ref: '#/components/messages/DealCommunityCards'\n      subscribe.message.3:\n        $ref: '#/components/messages/PlayerMove'\n      subscribe.message.4:\n        $ref: '#/components/messages/Showdown'\n      subscribe.message.5:\n        $ref: '#/components/messages/ResumeFromDisconnect'\n    description: Bidirectional stream over a single TCP connection\n    bindings:\n      x-tcp:\n        halfDuplex: false\noperations:\n  ai_api.publish:\n    action: receive\n    channel:\n      $ref: '#/channels/ai_api'\n    summary: AI_API → Injector messages\n    messages:\n      - $ref: '#/channels/ai_api/messages/publish.message.0'\n  ai_api.subscribe:\n    action: send\n    channel:\n      $ref: '#/channels/ai_api'\n    summary: Injector → AI_API messages\n    messages:\n      - $ref: '#/channels/ai_api/messages/subscribe.message.0'\n      - $ref: '#/channels/ai_api/messages/subscribe.message.1'\n      - $ref: '#/channels/ai_api/messages/subscribe.message.2'\n      - $ref: '#/channels/ai_api/messages/subscribe.message.3'\n      - $ref: '#/channels/ai_api/messages/subscribe.message.4'\n      - $ref: '#/channels/ai_api/messages/subscribe.message.5'\ncomponents:\n  messages:\n    StartGame:\n      name: start_game\n      title: Game start\n      contentType: application/json\n      payload:\n        $ref: '#/components/schemas/StartGamePayload'\n      examples:\n        - payload:\n            message_type: start_game\n            platform_name: xx_poker\n            n_players: 6\n            sb: 100\n            bb: 200\n            ante: 0\n            straddle: 0\n            cashdrop: 1000\n            player_info:\n              - pid: '332567'\n                stack: 47980\n              - pid: '101929'\n                stack: 55290\n              - pid: '111190'\n                stack: 25000\n              - pid: '94784'\n                stack: 78473\n              - pid: '106969'\n                stack: 25000\n              - pid: '111582'\n                stack: 82482\n            ai_player_pid: '111582'\n            post_a_blind_pids:\n              - '111582'\n              - '106969'\n            game_type: cash\n            raise_to: true\n    PrivateHand:\n      name: private_hand\n      title: Deal private (hole) cards\n      contentType: application/json\n      payload:\n        $ref: '#/components/schemas/PrivateHandPayload'\n      examples:\n        - payload:\n            message_type: private_hand\n            private_hand:\n              - As\n              - Ks\n    DealCommunityCards:\n      name: deal_community_cards\n      title: Deal community cards\n      contentType: application/json\n      payload:\n        $ref: '#/components/schemas/DealCommunityCardsPayload'\n      examples:\n        - payload:\n            message_type: deal_community_cards\n            deal_community_cards:\n              - 3s\n              - 5s\n              - 8d\n            pot_adjustment: 380\n    PlayerMove:\n      name: player_move\n      title: Player action\n      contentType: application/json\n      payload:\n        $ref: '#/components/schemas/PlayerMovePayload'\n      examples:\n        - payload:\n            message_type: player_move\n            action:\n              player_pid: '111190'\n              bet_type: raises\n              amount: 1000\n    Showdown:\n      name: showdown\n      title: Game end / showdown\n      contentType: application/json\n      payload:\n        $ref: '#/components/schemas/ShowdownPayload'\n      examples:\n        - payload:\n            message_type: showdown\n            showdown_info:\n              - pid: '332567'\n                payoff: 0\n                rake: 0\n                showdown_cards:\n                  - Qc\n                  - 3c\n              - pid: '101929'\n                payoff: -375\n                rake: 0\n              - pid: '111190'\n                payoff: 750\n                rake: 25\n                showdown_cards:\n                  - Tc\n                  - 8s\n              - pid: '94784'\n                payoff: -125\n                rake: 0\n              - pid: '106969'\n                payoff: -125\n                rake: 0\n              - pid: '111582'\n                payoff: -125\n                rake: 0\n    ResumeFromDisconnect:\n      name: resume_from_disconnect\n      title: Resume state after disconnect\n      contentType: application/json\n      payload:\n        $ref: '#/components/schemas/ResumeFromDisconnectPayload'\n      examples:\n        - payload:\n            message_type: resume_from_disconnect\n            player_info:\n              - pid: '332567'\n                stack: 47980\n                folded: false\n              - pid: '101929'\n                stack: 55290\n                folded: false\n            current_acting_player: '332567'\n            community_cards:\n              - 3s\n              - 5s\n              - 8d\n              - 8c\n            pot: 1500\n    AIResponse:\n      name: ai_response\n      title: AI response (action or ack)\n      contentType: application/json\n      payload:\n        $ref: '#/components/schemas/AIResponsePayload'\n      examples:\n        - name: error_example\n          payload:\n            success: false\n            error_msg: 'action invalid: xxxxx'\n        - name: action_example\n          payload:\n            success: true\n            game_id: abc123\n            action:\n              current_player_id: '111190'\n              bet_type: checks\n              amount: 0\n  schemas:\n    BetType:\n      type: string\n      enum:\n        - bets\n        - raises\n        - calls\n        - checks\n        - folds\n        - allins\n    Card:\n      type: string\n      description: 'Two-character (or 3 for 10) rank-suit code, e.g., \"As\", \"Td\"'\n      pattern: '^[2-9TJQKA][cdhs]$'\n    StartGamePayload:\n      type: object\n      additionalProperties: false\n      properties:\n        message_type:\n          const: start_game\n        platform_name:\n          type: string\n        n_players:\n          type: integer\n          minimum: 2\n          maximum: 10\n        sb:\n          type: integer\n          minimum: 0\n        bb:\n          type: integer\n          minimum: 0\n        ante:\n          type: integer\n          minimum: 0\n        straddle:\n          type: integer\n          minimum: 0\n        cashdrop:\n          type: integer\n          minimum: 0\n        player_info:\n          type: array\n          minItems: 2\n          items:\n            $ref: '#/components/schemas/PlayerSeat'\n        ai_player_pid:\n          type: string\n        post_a_blind_pids:\n          type: array\n          items:\n            type: string\n        game_type:\n          type: string\n          enum:\n            - cash\n        raise_to:\n          type: boolean\n      required:\n        - message_type\n        - platform_name\n        - n_players\n        - sb\n        - bb\n        - player_info\n    PlayerSeat:\n      type: object\n      additionalProperties: false\n      properties:\n        pid:\n          type: string\n        stack:\n          type: integer\n          minimum: 0\n      required:\n        - pid\n        - stack\n    PrivateHandPayload:\n      type: object\n      additionalProperties: false\n      properties:\n        message_type:\n          const: private_hand\n        private_hand:\n          type: array\n          minItems: 2\n          maxItems: 2\n          items:\n            $ref: '#/components/schemas/Card'\n      required:\n        - message_type\n        - private_hand\n    DealCommunityCardsPayload:\n      type: object\n      additionalProperties: false\n      properties:\n        message_type:\n          const: deal_community_cards\n        deal_community_cards:\n          type: array\n          minItems: 1\n          maxItems: 3\n          items:\n            $ref: '#/components/schemas/Card'\n          description: >\n            Newly dealt community cards: - 3 on transition preflop→flop - 1 on\n            turn - 1 on river\n        pot_adjustment:\n          type: integer\n          minimum: 0\n          description: Pot amount after adjustment (optional)\n      required:\n        - message_type\n        - deal_community_cards\n    PlayerMovePayload:\n      type: object\n      additionalProperties: false\n      properties:\n        message_type:\n          const: player_move\n        action:\n          type: object\n          additionalProperties: false\n          properties:\n            player_pid:\n              type: string\n            bet_type:\n              $ref: '#/components/schemas/BetType'\n            amount:\n              type: integer\n              minimum: 0\n              description: >\n                For bets/raises, this is the wager size (raise size EXCLUDING\n                the to-call portion). For non-bet/raise actions, set to 0.\n          required:\n            - player_pid\n            - bet_type\n            - amount\n      required:\n        - message_type\n        - action\n    ShowdownPayload:\n      type: object\n      additionalProperties: false\n      properties:\n        message_type:\n          const: showdown\n        showdown_info:\n          type: array\n          items:\n            $ref: '#/components/schemas/ShowdownEntry'\n      required:\n        - message_type\n        - showdown_info\n    ShowdownEntry:\n      type: object\n      additionalProperties: false\n      properties:\n        pid:\n          type: string\n        payoff:\n          type: integer\n        rake:\n          type: integer\n          minimum: 0\n        showdown_cards:\n          type: array\n          minItems: 2\n          maxItems: 2\n          items:\n            $ref: '#/components/schemas/Card'\n      required:\n        - pid\n        - payoff\n        - rake\n    ResumeFromDisconnectPayload:\n      type: object\n      additionalProperties: false\n      properties:\n        message_type:\n          const: resume_from_disconnect\n        player_info:\n          type: array\n          items:\n            $ref: '#/components/schemas/ResumeSeat'\n        current_acting_player:\n          type: string\n        community_cards:\n          type: array\n          minItems: 0\n          maxItems: 5\n          items:\n            $ref: '#/components/schemas/Card'\n        pot:\n          type: integer\n          minimum: 0\n      required:\n        - message_type\n        - player_info\n        - current_acting_player\n        - community_cards\n        - pot\n    ResumeSeat:\n      type: object\n      additionalProperties: false\n      properties:\n        pid:\n          type: string\n        stack:\n          type: integer\n          minimum: 0\n        folded:\n          type: boolean\n      required:\n        - pid\n        - stack\n    AIResponsePayload:\n      type: object\n      additionalProperties: false\n      properties:\n        success:\n          type: boolean\n        error_msg:\n          type: string\n        hero_payoff:\n          type: integer\n          description: Only present after showdown; equals payoff - rake\n        game_id:\n          type: string\n          description: Present only in response to 'start_game'\n        action:\n          type: object\n          description: Present only when it is the hero's turn to act\n          additionalProperties: false\n          properties:\n            current_player_id:\n              type: string\n              description: Verification of the acting player\n            bet_type:\n              $ref: '#/components/schemas/BetType'\n            amount:\n              type: integer\n              minimum: 0\n              description: >\n                For bets/raises, wager size (raise size EXCLUDING the to-call\n                portion). For non-bet/raise actions, set to 0.\n          required:\n            - current_player_id\n            - bet_type\n            - amount\n      required:\n        - success\n"